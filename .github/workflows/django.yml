name: 7elog CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    
    env:
        S3_BUCKET_NAME: team7elogbucket
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
        STATE: ${{ secrets.STATE }}
        SOCIAL_AUTH_GOOGLE_CLIENT_ID: ${{secrets.SOCIAL_AUTH_GOOGLE_CLIENT_ID}}
        SOCIAL_AUTH_GOOGLE_SECRET: ${{ secrets.SOCIAL_AUTH_GOOGLE_SECRET}}
        CODE_DEPLOY_APPLICATION_NAME: 7elog-app
        CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: 7elog-deploy-group
        DATABASES: ${{ secrets.DATABASES }}
        DB_HOST: ${{ secrets.DB_HOST }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.8]

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r velog/requirements.txt
        
    - name: Run Tests
      run: |
        cd velog
        python manage.py test
        
    - name: archive drcloud 
      run: tar cvfz ./drcloud.tar.gz *
       
    - name: Make zip file
      run: zip -r ./team7elogdjango.zip .
      shell: bash
     
    - name: AWS configure credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-2
      
    - name: Upload to S3
      run: aws s3 cp --region ap-northeast-2 ./team7elogdjango.zip s3://$S3_BUCKET_NAME/team7elogdjango.zip
    
    - name: Sync to S3
      run: aws s3 sync . s3://team7elogbucket/team7-server
  
  deploy:
    needs: build
    name: Deploy
    runs-on: ubuntu
    
    steps:
    - name: Code Deploy
      run: | 
        aws deploy create-deployment \
        --deployment-config-name CodeDeployDefault.AllAtOnce \
        --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
        --deployment-group-name ${{ env.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME }} \
        --s3-location bucket=$S3_BUCKET_NAME,bundleType=zip,key=testprojectdjango.zip
